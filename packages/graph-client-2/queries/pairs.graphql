fragment PairFields on Pair {
    id
    chainId
    # chainName
    # chainShortName
    type
    swapFee
    twapEnabled
    name
    token0 {
      name
      id
      decimals
      symbol
    }     
    token1 {
      name
      id
      decimals
      symbol
    }
    source
    createdAtBlock
    createdAtTimestamp
    reserve0
    reserve1
    liquidity
    liquidityUSD
    liquidityNative
    # trackedLiquidityNative
    # token0Price
    # token1Price
    volumeUSD
    volumeNative
    volumeToken0
    volumeToken1
    feesNative
    feesUSD
    apr
    aprUpdatedAtTimestamp
}

query PairsByChainId(
  $first: Int
  $skip: Int
  $where: Pair_filter
  $orderBy: Pair_orderBy
  $orderDirection: OrderDirection
  $block: Block_height
  $chainId: Int!
) {
  pairs: pairsByChainId(
    first: $first
    skip: $skip
    where: $where,
    orderBy: $orderBy
    orderDirection: $orderDirection
    block: $block
    chainId: $chainId
  ) {
    ...PairFields
  }
}

query PairsByChainIds(
  $first: Int
  $skip: Int
  $where: Pair_filter
  $orderBy: Pair_orderBy
  $orderDirection: OrderDirection
  $block: Block_height
  $chainIds: [Int!]!
  $blocks: [Block_height!]
) {
  pairs: pairsByChainIds(
    first: $first
    skip: $skip
    where: $where,
    orderBy: $orderBy
    orderDirection: $orderDirection
    block: $block
    chainIds: $chainIds
    blocks: $blocks
  ) {
    ...PairFields
  }
}

query PairsWithFarms(
  $first: Int
  $skip: Int
  $where: Pair_filter
  $orderBy: Pair_orderBy
  $orderDirection: OrderDirection
  $block: Block_height
  $chainIds: [Int!]!
  $pagination: Pagination
  $farmsOnly: Boolean
) {
  pairs: pairsWithFarms(
    first: $first
    skip: $skip
    where: $where,
    orderBy: $orderBy
    orderDirection: $orderDirection
    block: $block
    chainIds: $chainIds
    pagination: $pagination
    farmsOnly: $farmsOnly
  ) {
    ...PairFields
    volume1d
    volume1w
    fees1d
    fees1w
    feeApr
    incentiveApr
    farm {
      id
      incentives {
        apr
        rewardPerDay
        rewardToken {
          address
          symbol
          decimals
        }
        rewarderAddress
        rewarderType
      }
      chefType
      poolType
    }
  }
}

query CrossChainPair($id: ID!, $now: Int!, $chainId: Int!) {
  crossChainPair(id: $id, now: $now, chainId: $chainId) {
    ...PairFields
    liquidity1dChange
    liquidity1wChange
    volume1d
    volume1dChange
    txCount
    txCount1d,
    txCount1dChange,
    feeApr
    incentiveApr
    farm {
      id
      incentives {
        apr
        rewardPerDay
        rewardToken {
          address
          symbol
          decimals
        }
        rewarderAddress
        rewarderType
      }
      chefType
      poolType
    }
    hourSnapshots(first: 168, orderBy: date, orderDirection: desc) {
      id
      date
      volumeUSD
      liquidityNative
      liquidityUSD
      transactionCount
    }
    daySnapshots(first: 730, orderBy: date, orderDirection: desc) {
      id
      date
      volumeUSD
      liquidityNative
      liquidityUSD
      transactionCount
    }
    dayChangeData: daySnapshots(first: 2, orderBy: date, orderDirection: desc, where: { date_lt: $now }) {
      id
      date
      volumeUSD
      liquidityNative
      liquidityUSD
      transactionCount
    }
  }
}

# fragment PairWithIncentivesFields on PairWithIncentives {
#   ...PairFields
#   # liquidityPositions {
#   #    id
#   # }
#   # liquidityPositionSnapshots {
#   #   id
#   # }
#   incentives {
#     id
#     # currency { id symbol name decimals }
#     apr
#   }
# }

# query PairWithIncentives(
#   $first: Int
#   $skip: Int
#   # $where: PairWithIncentives_filter
#   # $orderBy: PairWithIncentives_orderBy
#   # $orderDirection: OrderDirection
#   $block: Block_height
#   $chainIds: [Int!]!
# ) {
#   pairWithIncentives(
#     first: $first
#     skip: $skip
#     # where: $where
#     # orderBy: $orderBy
#     # orderDirection: $orderDirection
#     block: $block
#     chainIds: $chainIds
#   ) {
#     ...PairWithIncentivesFields
#   }
# }

# query PairWithIncentives(
#   $first: Int
#   $skip: Int
#   # $where: PairWithIncentives_filter
#   # $orderBy: PairWithIncentives_orderBy
#   # $orderDirection: OrderDirection
#   $block: Block_height
#   $chainIds: [Int!]!
# ) {
#   pairWithIncentives(
#     first: $first
#     skip: $skip
#     # where: $where
#     # orderBy: $orderBy
#     # orderDirection: $orderDirection
#     block: $block
#     chainIds: $chainIds
#   ) {
#     ...PairWithIncentivesFields
#   }
# }
